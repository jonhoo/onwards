name: terraform

on:
  pull_request_target:
    branches:
      - main
    paths:
      # Only plan if TF has changed, even though we may _apply_ regardless
      # to re-push Rust artifacts.
      - "infra/**.tf"

jobs:
  plan:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v4

      # we do not run the actual build, since a user could then inject a
      # malicious build.rs to leak our GITHUB_TOKEN. Instead, we just touch a
      # file in the right place that terraform plan will then use as "the
      # lambda binary". This is fine since plan doesn't actually apply
      # anything. See also
      # https://github.com/jonhoo/onwards/pull/7#issuecomment-3046317254
      - name: fake cargo lambda build
        run: |
          mkdir -p target/lambda/lambda
          touch target/lambda/lambda/bootstrap

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_PLAN_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Plan
        working-directory: ./infra
        run: |
          terraform init
          terraform plan \
            -var 'domain=${{ vars.DOMAIN }}' \
            -var 'aws_region=${{ vars.AWS_REGION }}' \
            -var "github_repo=$GITHUB_REPOSITORY"
